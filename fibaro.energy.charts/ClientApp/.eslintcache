[{"d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\index.js":"1","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\App.js":"2","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\reportWebVitals.js":"3","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Layout.js":"4","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\Dashboard.js":"5","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\FibaroApi.js":"6","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\EnergyNavigator\\EnergyNavigator.js":"7","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\Endpoints.js":"8","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\BaseApi.js":"9","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\index.js":"10","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\App.js":"11","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\reportWebVitals.js":"12","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Layout.js":"13","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\FibaroApi.js":"14","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\EnergyNavigator\\EnergyNavigator.js":"15","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\Dashboard.js":"16","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\Endpoints.js":"17","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\BaseApi.js":"18","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\DashboardHourly.js":"19","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\EnergyChart.js":"20","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\DashboardDaily.js":"21","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\RangeSelector.js":"22","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\DashboardMonthly.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":207,"mtime":1609086914532,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":1101,"mtime":1609150504030,"results":"28","hashOfConfig":"25"},{"size":96,"mtime":1608928301244,"results":"29","hashOfConfig":"25"},{"size":271,"mtime":1609165603013,"results":"30","hashOfConfig":"25"},{"size":1398,"mtime":1609091526493,"results":"31","hashOfConfig":"25"},{"size":88,"mtime":1609153459205,"results":"32","hashOfConfig":"25"},{"size":2905,"mtime":1609165336043,"results":"33","hashOfConfig":"25"},{"size":500,"mtime":499162500000,"results":"34","hashOfConfig":"35"},{"size":582,"mtime":1614767136159,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":2353,"mtime":1614774811061,"results":"38","hashOfConfig":"35"},{"size":590,"mtime":1609863330794,"results":"39","hashOfConfig":"35"},{"size":3992,"mtime":1614775538987,"results":"40","hashOfConfig":"35"},{"size":1429,"mtime":1614774691371,"results":"41","hashOfConfig":"35"},{"size":191,"mtime":1614775688786,"results":"42","hashOfConfig":"35"},{"size":2688,"mtime":1609173542699,"results":"43","hashOfConfig":"35"},{"size":1363,"mtime":1609928031692,"results":"44","hashOfConfig":"35"},{"size":678,"mtime":1610448085838,"results":"45","hashOfConfig":"35"},{"size":1379,"mtime":1614763250813,"results":"46","hashOfConfig":"35"},{"size":1360,"mtime":1614766107890,"results":"47","hashOfConfig":"35"},{"size":1473,"mtime":1614761905185,"results":"48","hashOfConfig":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1oqyrlp",{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1h89enz",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},"d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\index.js",[],["108","109"],"d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\App.js",["110","111"],"import logo from './logo.svg';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport Layout from './Components/Layout';\n\nfunction App() {\n  return (\n    <Layout/>\n  );\n}\n\nexport default App;\n","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\reportWebVitals.js",[],"d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Layout.js",["112","113"],"import React from 'react';\r\n//import NavMenu from './NavMenu';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container, Paper } from '@material-ui/core';\r\nimport EnergyNavigator from './EnergyNavigator/EnergyNavigator';\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport FibaroApi from '../Api/FibaroApi';\r\n\r\nexport default props => {\r\n    //const user = localStorage.getItem('user');\r\n    const [interfaceData, setInterfaceData] = React.useState({});\r\n    React.useEffect(() => {\r\n        let api = new FibaroApi();\r\n        api.GetInterfaceData().then(data => setInterfaceData(data));\r\n    });\r\n    \r\n    return (\r\n        <Container>\r\n            <Paper></Paper>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Paper>\r\n                        <EnergyNavigator/>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                    <Paper>\r\n                        <Dashboard/>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\Dashboard.js",["114"],"import React from 'react';\r\n\r\nexport default props => {\r\n    return (\r\n        <div/>\r\n    )\r\n};","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\FibaroApi.js",[],"d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\EnergyNavigator\\EnergyNavigator.js",["115","116"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { List, ListItem, ListItemText, Collapse  } from '@material-ui/core';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport default props => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            <ListItem button onClick={handleClick}>\r\n                {/* <ListItemIcon>\r\n                    <InboxIcon />\r\n                </ListItemIcon> */}\r\n                <ListItemText primary=\"Main room\" />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested}>\r\n                        <ListItemText primary=\"Starred\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        </List>\r\n    )\r\n};","d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\Endpoints.js",[],["117","118"],"d:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\BaseApi.js",["119","120","121"],"import axios, { Method, AxiosRequestConfig, AxiosResponse } from 'axios';\r\n//import stringify from 'qs-stringify';\r\n\r\nexport default class BaseApi {\r\n    RootUrl = '/';\r\n\r\n    QueryMethods = class {\r\n        static  GET = \"GET\";\r\n        static  DELETE = \"DELETE\";\r\n        static  HEAD = \"HEAD\";\r\n        static  OPTIONS = \"OPTIONS\";\r\n        static  PUT = \"PUT\";\r\n        static  POST = \"POST\";\r\n        static  PATCH  = \"PATCH\";\r\n    };\r\n\r\n    // private DefaultConfig: AxiosRequestConfig = {\r\n    //     baseURL: this.RootUrl,\r\n    //     timeout: 120000,\r\n    //     paramsSerializer: stringify\r\n    // };\r\n\r\n    HandleResponse = function(response) {\r\n        if (response.data.status >= 0) {\r\n            return response.data.data;\r\n        }\r\n\r\n        return Promise.reject();\r\n    };\r\n\r\n    HandleError = function(e) {\r\n        if (e?.response?.status === 401 || e?.response?.status === 403) {\r\n            window.location.href = this.RootUrl;\r\n        }\r\n\r\n        if (axios.isCancel(e)) {\r\n            console.warn(e.message);\r\n        }\r\n\r\n        return Promise.reject(e);\r\n    };\r\n\r\n    Query = function(params, url, method = this.QueryMethods.POST, options) {\r\n        //let { token: cancelToken, cancel } = axios.CancelToken.source();\r\n        let config = { ...options, method, url};//, cancelToken };\r\n\r\n        //cancel = cancel.bind(this, `${method} \"${url}\" request is canceled.`);\r\n\r\n        method = method || this.QueryMethods.POST;\r\n\r\n        if (\r\n            method === this.QueryMethods.POST ||\r\n            method === this.QueryMethods.PUT ||\r\n            method === this.QueryMethods.PATCH\r\n        ) {\r\n            config.data = params;\r\n        } else {\r\n            config.params = params;\r\n        }\r\n\r\n        config.headers = {\r\n            ...config.headers, \r\n            'Cookie': 'PHPSESSID=5vos50ucd36riemrpo6of1qnl6; _ga=GA1.1.1473527582.1606992060'};\r\n\r\n        const query = axios(config)\r\n             .then(response => this.HandleResponse(response))\r\n             .catch((e) => this.HandleError(e));\r\n\r\n        return query;    \r\n        //return new Promise((resolutionFunc,rejectionFunc) => {resolutionFunc();});\r\n    }\r\n\r\n    // protected Submit<T>(\r\n    //     formData: FormData,\r\n    //     url: string\r\n    // ): CancelablePromise<T> {\r\n\r\n    //     let { token: cancelToken, cancel } = axios.CancelToken.source();\r\n    //     const options = {\r\n    //         headers: {\r\n    //             'content-type': 'multipart/form-data',\r\n    //         },\r\n    //         cancelToken\r\n    //     };\r\n\r\n    //     cancel = cancel.bind(this, `POST \"${url}\" request is canceled.`);\r\n\r\n    //     const query = axios.post(url, formData, options)\r\n    //         .then((response: AxiosResponse<IData>) => this.HandleResponse<T>(response))\r\n    //         .catch((e) => this.HandleError<T>(e));\r\n\r\n    //     return Object.assign(query, { cancel });\r\n    // }\r\n}\r\n","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\index.js",[],["122","123"],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\App.js",[],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\reportWebVitals.js",[],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Layout.js",["124"],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\FibaroApi.js",[],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\EnergyNavigator\\EnergyNavigator.js",["125","126","127"],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\Dashboard.js",["128","129","130","131","132"],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\Endpoints.js",[],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Api\\BaseApi.js",[],"D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\DashboardHourly.js",["133","134"],"import React from 'react';\r\nimport EnergyChart from './EnergyChart';\r\nimport FibaroApi from '../../Api/FibaroApi';\r\n\r\nexport default props => {\r\n    const { deviceId } = props;\r\n    const [data, setData] = React.useState({});\r\n    const [isLoaded, setIsLoaded] = React.useState(false);\r\n\r\n    React.useEffect(async () => {\r\n        let api = new FibaroApi();\r\n        let requestedData = [];\r\n\r\n        for (let index = 24; index > 0; index--) {\r\n            let from = new Date();\r\n            from.setHours(from.getHours() - index, 0, 0, 0);\r\n            let to = new Date(from.getTime());\r\n            to.setHours(to.getHours() + 1);\r\n            const fromR = from.getTime() / 1000;\r\n            const toR = to.getTime() / 1000;\r\n\r\n            let loadedData = await api.GetEnergyData(fromR, toR, deviceId);\r\n            let item = {\r\n                hour: `${from.getHours()}:00`,\r\n                energy: loadedData.length ? loadedData[0].kWh : 0\r\n            }\r\n            requestedData.push(item);\r\n        }\r\n\r\n        setData(requestedData);\r\n        setIsLoaded(true);\r\n    }, [deviceId]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                isLoaded\r\n                    ? <EnergyChart data={data} xAxisKey=\"hour\" yAxisKey=\"energy\"/>\r\n                    : <React.Fragment />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\EnergyChart.js",["135"],"import React from 'react';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nexport default props => {\r\n    const { data, xAxisKey, yAxisKey } = props;\r\n\r\n    return (\r\n        <ResponsiveContainer width='100%' height={400}>\r\n            <BarChart\r\n                data={data}\r\n\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey={xAxisKey} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey={yAxisKey} fill=\"#8884d8\" />\r\n            </BarChart >\r\n        </ResponsiveContainer>\r\n    )\r\n};","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\DashboardDaily.js",["136","137"],"import React from 'react';\r\nimport FibaroApi from '../../Api/FibaroApi';\r\nimport EnergyChart from './EnergyChart';\r\n\r\nexport default props => {\r\n    const { deviceId } = props;\r\n    const [data, setData] = React.useState({});\r\n    const [isLoaded, setIsLoaded] = React.useState(false);\r\n\r\n    React.useEffect(async () => {\r\n        let api = new FibaroApi();\r\n        let requestedData = [];\r\n\r\n        for (let index = 30; index > 0; index--) {\r\n            let from = new Date((new Date()).getTime() - index * 24 * 60 * 60 * 1000);\r\n            let to = new Date((new Date()).getTime() - (index - 1) * 24 * 60 * 60 * 1000);\r\n\r\n            let fromR = from.setHours(0, 0, 0, 0) / 1000;\r\n            let toR = to.setHours(0, 0, 0, 0) / 1000;\r\n\r\n            let loadedData = await api.GetEnergyData(fromR, toR, deviceId);\r\n            let item = {\r\n                day: from.toLocaleDateString('uk-UA'),\r\n                energy: loadedData.length ? loadedData[0].kWh : 0\r\n            }\r\n            requestedData.push(item);\r\n        }\r\n\r\n        setData(requestedData);\r\n        setIsLoaded(true);\r\n    }, [deviceId]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                isLoaded\r\n                    ? <EnergyChart data={data} xAxisKey=\"day\" yAxisKey=\"energy\"/>\r\n                    : <React.Fragment />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\RangeSelector.js",["138"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst EnergyRanges = [\r\n    {\r\n        id: 0,\r\n        lable: \"Hourly\"\r\n    },\r\n    {\r\n        id: 1,\r\n        lable: \"Daily\"\r\n    },\r\n    {\r\n        id: 2,\r\n        lable: \"Monthly\"\r\n    },\r\n\r\n]\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        padding: theme.spacing.unit * 2,\r\n        height: 60,\r\n        width: '100%',\r\n    },\r\n    chip: {\r\n        marginTop: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2,\r\n        width: 150\r\n    },\r\n}));\r\n\r\nexport default props => {\r\n    const { selectedId, onSelect } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {EnergyRanges.map(item =>\r\n                <Chip\r\n                    key={item.lable}\r\n                    label={item.lable}\r\n                    color='primary'\r\n                    onClick={() => onSelect(item.id)}\r\n                    clickable\r\n                    className={classes.chip}\r\n                    variant={selectedId === item.id ? 'default' : 'outlined'}\r\n                />\r\n            )}\r\n        </div>\r\n\r\n    );\r\n}","D:\\Projects\\fibaro.energy.charts\\fibaro.energy.charts\\ClientApp\\src\\Components\\Dashboard\\DashboardMonthly.js",["139","140","141"],"import React from 'react';\r\nimport FibaroApi from '../../Api/FibaroApi';\r\nimport EnergyChart from './EnergyChart';\r\n\r\nexport default props => {\r\n    const { deviceId } = props;\r\n    const [data, setData] = React.useState({});\r\n    const [isLoaded, setIsLoaded] = React.useState(false);\r\n\r\n    React.useEffect(async () => {\r\n        let api = new FibaroApi();\r\n        let requestedData = [];\r\n\r\n        const today = new Date();\r\n        for (let index = 12; index > 0; index--) {\r\n\r\n            let from = new Date(today.getFullYear(), today.getMonth(), 1);\r\n            from.setMonth(-index + 3);\r\n            let to = from.getMonth() == today.getMonth() ? today : new Date(from.getFullYear(), from.getMonth() + 1, 0);\r\n\r\n            let fromR = from.setHours(0, 0, 0, 0) / 1000;\r\n            let toR =to.setHours(0, 0, 0, 0) / 1000;\r\n\r\n            let loadedData = await api.GetEnergyData(fromR, toR, deviceId);\r\n            let item = {\r\n                day: from.toLocaleDateString('uk-UA'),\r\n                energy: loadedData.length ? loadedData[0].kWh : 0\r\n            }\r\n            requestedData.push(item);\r\n        }\r\n\r\n        setData(requestedData);\r\n        setIsLoaded(true);\r\n    }, [deviceId]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                isLoaded\r\n                    ? <EnergyChart data={data} xAxisKey=\"day\" yAxisKey=\"energy\"/>\r\n                    : <React.Fragment />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":9,"column":1,"nodeType":"153","endLine":36,"endColumn":3},{"ruleId":"146","severity":1,"message":"154","line":11,"column":12,"nodeType":"148","messageId":"149","endLine":11,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":3,"column":1,"nodeType":"153","endLine":7,"endColumn":3},{"ruleId":"146","severity":1,"message":"155","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":18,"column":1,"nodeType":"153","endLine":44,"endColumn":3},{"ruleId":"142","replacedBy":"156"},{"ruleId":"144","replacedBy":"157"},{"ruleId":"146","severity":1,"message":"158","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":23},{"ruleId":"146","severity":1,"message":"159","line":1,"column":25,"nodeType":"148","messageId":"149","endLine":1,"endColumn":43},{"ruleId":"146","severity":1,"message":"160","line":1,"column":45,"nodeType":"148","messageId":"149","endLine":1,"endColumn":58},{"ruleId":"142","replacedBy":"161"},{"ruleId":"144","replacedBy":"162"},{"ruleId":"151","severity":1,"message":"152","line":31,"column":1,"nodeType":"153","endLine":75,"endColumn":3},{"ruleId":"151","severity":1,"message":"152","line":44,"column":1,"nodeType":"153","endLine":109,"endColumn":3},{"ruleId":"163","severity":1,"message":"164","line":71,"column":17,"nodeType":"165","endLine":71,"endColumn":78},{"ruleId":"163","severity":1,"message":"164","line":80,"column":37,"nodeType":"165","endLine":80,"endColumn":130},{"ruleId":"166","severity":1,"message":"167","line":20,"column":5,"nodeType":"168","messageId":"169","endLine":32,"endColumn":6},{"ruleId":"170","severity":1,"message":"171","line":23,"column":13,"nodeType":"172","messageId":"173","endLine":23,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":27,"column":13,"nodeType":"172","messageId":"173","endLine":27,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":31,"column":13,"nodeType":"172","messageId":"173","endLine":31,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":34,"column":1,"nodeType":"153","endLine":50,"endColumn":3},{"ruleId":"151","severity":1,"message":"152","line":5,"column":1,"nodeType":"153","endLine":43,"endColumn":3},{"ruleId":"174","severity":1,"message":"175","line":10,"column":21,"nodeType":"176","endLine":32,"endColumn":6},{"ruleId":"151","severity":1,"message":"152","line":6,"column":1,"nodeType":"153","endLine":24,"endColumn":3},{"ruleId":"151","severity":1,"message":"152","line":5,"column":1,"nodeType":"153","endLine":42,"endColumn":3},{"ruleId":"174","severity":1,"message":"175","line":10,"column":21,"nodeType":"176","endLine":31,"endColumn":6},{"ruleId":"151","severity":1,"message":"152","line":38,"column":1,"nodeType":"153","endLine":58,"endColumn":2},{"ruleId":"151","severity":1,"message":"152","line":5,"column":1,"nodeType":"153","endLine":45,"endColumn":3},{"ruleId":"174","severity":1,"message":"175","line":10,"column":21,"nodeType":"176","endLine":34,"endColumn":6},{"ruleId":"177","severity":1,"message":"178","line":19,"column":38,"nodeType":"179","messageId":"180","endLine":19,"endColumn":40},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'interfaceData' is assigned a value but never used.","'useEffect' is defined but never used.",["181"],["182"],"'Method' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.",["181"],["182"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]